{"ast":null,"code":"const express = require('express');\nconst cors = require('cors');\nconst bodyParser = require('body-parser');\nconst app = express();\nconst PORT = 5000;\napp.use(cors());\napp.use(bodyParser.json());\nconst subscriptions = [];\napp.post('/subscribe', (req, res) => {\n  const {\n    email,\n    plan\n  } = req.body;\n  if (!email || !plan) {\n    return res.status(400).json({\n      message: 'Email and plan are required.'\n    });\n  }\n  subscriptions.push({\n    email,\n    plan\n  });\n  console.log(`Subscription added: ${email} - ${plan}`);\n  res.json({\n    message: `Successfully subscribed to the ${plan} plan.`\n  });\n});\napp.listen(PORT, () => {\n  console.log(`Server running on http://localhost:${PORT}`);\n});","map":{"version":3,"names":["express","require","cors","bodyParser","app","PORT","use","json","subscriptions","post","req","res","email","plan","body","status","message","push","console","log","listen"],"sources":["C:/Users/prabhat_dwivedi/tiffin-service/frontend/src/components/Subscription.js"],"sourcesContent":["const express = require('express');\r\nconst cors = require('cors');\r\nconst bodyParser = require('body-parser');\r\n\r\nconst app = express();\r\nconst PORT = 5000;\r\n\r\napp.use(cors());\r\napp.use(bodyParser.json());\r\n\r\nconst subscriptions = [];\r\n\r\napp.post('/subscribe', (req, res) => {\r\n  const { email, plan } = req.body;\r\n\r\n  if (!email || !plan) {\r\n    return res.status(400).json({ message: 'Email and plan are required.' });\r\n  }\r\n\r\n  subscriptions.push({ email, plan });\r\n  console.log(`Subscription added: ${email} - ${plan}`);\r\n  res.json({ message: `Successfully subscribed to the ${plan} plan.` });\r\n});\r\n\r\napp.listen(PORT, () => {\r\n  console.log(`Server running on http://localhost:${PORT}`);\r\n});\r\n"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAME,UAAU,GAAGF,OAAO,CAAC,aAAa,CAAC;AAEzC,MAAMG,GAAG,GAAGJ,OAAO,CAAC,CAAC;AACrB,MAAMK,IAAI,GAAG,IAAI;AAEjBD,GAAG,CAACE,GAAG,CAACJ,IAAI,CAAC,CAAC,CAAC;AACfE,GAAG,CAACE,GAAG,CAACH,UAAU,CAACI,IAAI,CAAC,CAAC,CAAC;AAE1B,MAAMC,aAAa,GAAG,EAAE;AAExBJ,GAAG,CAACK,IAAI,CAAC,YAAY,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK;EACnC,MAAM;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAGH,GAAG,CAACI,IAAI;EAEhC,IAAI,CAACF,KAAK,IAAI,CAACC,IAAI,EAAE;IACnB,OAAOF,GAAG,CAACI,MAAM,CAAC,GAAG,CAAC,CAACR,IAAI,CAAC;MAAES,OAAO,EAAE;IAA+B,CAAC,CAAC;EAC1E;EAEAR,aAAa,CAACS,IAAI,CAAC;IAAEL,KAAK;IAAEC;EAAK,CAAC,CAAC;EACnCK,OAAO,CAACC,GAAG,CAAC,uBAAuBP,KAAK,MAAMC,IAAI,EAAE,CAAC;EACrDF,GAAG,CAACJ,IAAI,CAAC;IAAES,OAAO,EAAE,kCAAkCH,IAAI;EAAS,CAAC,CAAC;AACvE,CAAC,CAAC;AAEFT,GAAG,CAACgB,MAAM,CAACf,IAAI,EAAE,MAAM;EACrBa,OAAO,CAACC,GAAG,CAAC,sCAAsCd,IAAI,EAAE,CAAC;AAC3D,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}