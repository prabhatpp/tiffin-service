{"ast":null,"code":"import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport en from './locales/en.json';\nimport hi from './locales/hi.json';\ni18n.use(LanguageDetector) // Detects the user's language\n.use(initReactI18next) // Passes i18n instance to react-i18next\n.init({\n  resources: {\n    en: {\n      translation: en\n    },\n    hi: {\n      translation: hi\n    }\n  },\n  fallbackLng: 'en',\n  // Fallback language if detection fails\n  interpolation: {\n    escapeValue: false // React already escapes by default\n  }\n});\nexport default i18n;","map":{"version":3,"names":["i18n","initReactI18next","LanguageDetector","en","hi","use","init","resources","translation","fallbackLng","interpolation","escapeValue"],"sources":["C:/Users/prabhat_dwivedi/tiffin-service/frontend/src/i18n.js"],"sourcesContent":["import i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\n\r\nimport en from './locales/en.json';\r\nimport hi from './locales/hi.json';\r\n\r\ni18n\r\n  .use(LanguageDetector) // Detects the user's language\r\n  .use(initReactI18next) // Passes i18n instance to react-i18next\r\n  .init({\r\n    resources: {\r\n      en: { translation: en },\r\n      hi: { translation: hi },\r\n    },\r\n    fallbackLng: 'en', // Fallback language if detection fails\r\n    interpolation: {\r\n      escapeValue: false, // React already escapes by default\r\n    },\r\n  });\r\n\r\nexport default i18n;\r\n"],"mappings":"AAAA,OAAOA,IAAI,MAAM,SAAS;AAC1B,SAASC,gBAAgB,QAAQ,eAAe;AAChD,OAAOC,gBAAgB,MAAM,kCAAkC;AAE/D,OAAOC,EAAE,MAAM,mBAAmB;AAClC,OAAOC,EAAE,MAAM,mBAAmB;AAElCJ,IAAI,CACDK,GAAG,CAACH,gBAAgB,CAAC,CAAC;AAAA,CACtBG,GAAG,CAACJ,gBAAgB,CAAC,CAAC;AAAA,CACtBK,IAAI,CAAC;EACJC,SAAS,EAAE;IACTJ,EAAE,EAAE;MAAEK,WAAW,EAAEL;IAAG,CAAC;IACvBC,EAAE,EAAE;MAAEI,WAAW,EAAEJ;IAAG;EACxB,CAAC;EACDK,WAAW,EAAE,IAAI;EAAE;EACnBC,aAAa,EAAE;IACbC,WAAW,EAAE,KAAK,CAAE;EACtB;AACF,CAAC,CAAC;AAEJ,eAAeX,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}